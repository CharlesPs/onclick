{"ast":null,"code":"import history from '@history';\nimport axios from 'axios';\nimport BoardModel from '../../model/BoardModel';\nimport firebaseService from 'app/services/firebaseService';\nexport var GET_BOARDS = '[SCRUMBOARD APP] GET BOARDS';\nexport var RESET_BOARDS = '[SCRUMBOARD APP] RESET BOARDS';\nexport var NEW_BOARD = '[SCRUMBOARD APP] NEW BOARD';\nexport function getBoards() {\n  var ref = firebaseService.db.ref(\"contacts\");\n  var request = axios.get('/api/scrumboard-app/boards');\n  return function (dispatch) {\n    return request.then(function (response) {\n      return dispatch({\n        type: GET_BOARDS,\n        payload: response.data\n      });\n    });\n  };\n}\nexport function resetBoards() {\n  return {\n    type: RESET_BOARDS\n  };\n}\nexport function newBoard(board) {\n  board = new BoardModel();\n  return function (dispatch) {\n    return firebaseService.db.ref(\"board\").push(board).then(function (snapshot) {\n      history.push({\n        pathname: \"/scrumboard/boards/\".concat(snapshot.key, \"/\").concat(board.handle)\n      });\n      return dispatch({\n        type: NEW_BOARD,\n        board: board\n      });\n    });\n  };\n}","map":{"version":3,"sources":["/Users/msumaran/Documents/Proyectos/masternativos/src/app/scrumboard/store/actions/boards.actions.js"],"names":["history","axios","BoardModel","firebaseService","GET_BOARDS","RESET_BOARDS","NEW_BOARD","getBoards","ref","db","request","get","dispatch","then","response","type","payload","data","resetBoards","newBoard","board","push","snapshot","pathname","key","handle"],"mappings":"AAAA,OAAOA,OAAP,MAAoB,UAApB;AACA,OAAOC,KAAP,MAAkB,OAAlB;AACA,OAAOC,UAAP,MAAuB,wBAAvB;AACA,OAAOC,eAAP,MAA4B,8BAA5B;AACA,OAAO,IAAMC,UAAU,GAAG,6BAAnB;AACP,OAAO,IAAMC,YAAY,GAAG,+BAArB;AACP,OAAO,IAAMC,SAAS,GAAG,4BAAlB;AAEP,OAAO,SAASC,SAAT,GAAqB;AAE3B,MAAIC,GAAG,GAAGL,eAAe,CAACM,EAAhB,CAAmBD,GAAnB,YAAV;AAGG,MAAME,OAAO,GAAGT,KAAK,CAACU,GAAN,CAAU,4BAAV,CAAhB;AAEA,SAAO,UAAAC,QAAQ;AAAA,WACXF,OAAO,CAACG,IAAR,CAAa,UAAAC,QAAQ;AAAA,aACjBF,QAAQ,CAAC;AACLG,QAAAA,IAAI,EAAEX,UADD;AAELY,QAAAA,OAAO,EAAEF,QAAQ,CAACG;AAFb,OAAD,CADS;AAAA,KAArB,CADW;AAAA,GAAf;AAOH;AAED,OAAO,SAASC,WAAT,GAAuB;AAC1B,SAAO;AACHH,IAAAA,IAAI,EAAEV;AADH,GAAP;AAGH;AAED,OAAO,SAASc,QAAT,CAAkBC,KAAlB,EAAyB;AAC5BA,EAAAA,KAAK,GAAI,IAAIlB,UAAJ,EAAT;AAEA,SAAO,UAAAU,QAAQ;AAAA,WACXT,eAAe,CAACM,EAAhB,CAAmBD,GAAnB,UACCa,IADD,CACMD,KADN,EAECP,IAFD,CAEM,UAAAS,QAAQ,EAAI;AAEdtB,MAAAA,OAAO,CAACqB,IAAR,CAAa;AACTE,QAAAA,QAAQ,+BAAwBD,QAAQ,CAACE,GAAjC,cAAwCJ,KAAK,CAACK,MAA9C;AADC,OAAb;AAGA,aAAOb,QAAQ,CAAC;AACZG,QAAAA,IAAI,EAAET,SADM;AAEZc,QAAAA,KAAK,EAAEA;AAFK,OAAD,CAAf;AAIH,KAXD,CADW;AAAA,GAAf;AAaH","sourcesContent":["import history from '@history';\nimport axios from 'axios';\nimport BoardModel from '../../model/BoardModel';\nimport firebaseService from 'app/services/firebaseService';\nexport const GET_BOARDS = '[SCRUMBOARD APP] GET BOARDS';\nexport const RESET_BOARDS = '[SCRUMBOARD APP] RESET BOARDS';\nexport const NEW_BOARD = '[SCRUMBOARD APP] NEW BOARD';\n\nexport function getBoards() {\n\n\tlet ref = firebaseService.db.ref(`contacts`);\n\n\t\n    const request = axios.get('/api/scrumboard-app/boards');\n\n    return dispatch =>\n        request.then(response =>\n            dispatch({\n                type: GET_BOARDS,\n                payload: response.data\n            })\n        );\n}\n\nexport function resetBoards() {\n    return {\n        type: RESET_BOARDS\n    };\n}\n\nexport function newBoard(board) {\n    board =  new BoardModel();\n\n    return dispatch =>\n        firebaseService.db.ref(`board`)\n        .push(board)\n        .then(snapshot => {\n\n            history.push({\n                pathname: `/scrumboard/boards/${snapshot.key}/${board.handle}`\n            });\n            return dispatch({\n                type: NEW_BOARD,\n                board: board\n            });\n        });\n}"]},"metadata":{},"sourceType":"module"}