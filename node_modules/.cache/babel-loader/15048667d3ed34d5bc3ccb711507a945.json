{"ast":null,"code":"import history from '@history';\nimport BoardModel from '../../model/BoardModel';\nimport firebaseService from 'app/services/firebaseService';\nimport _ from '@lodash';\nexport var GET_BOARDS = '[SCRUMBOARD APP] GET BOARDS';\nexport var RESET_BOARDS = '[SCRUMBOARD APP] RESET BOARDS';\nexport var NEW_BOARD = '[SCRUMBOARD APP] NEW BOARD';\nexport function getBoards() {\n  var ref = firebaseService.db.ref(\"board\");\n  return function (dispatch) {\n    return ref.once('value').then(function (snapshot) {\n      var boards = snapshot.val();\n\n      if (boards !== null) {\n        _.forEach(boards, function (value, key) {\n          if (value) value.id = key;\n        });\n      } else {\n        boards = [];\n      } //boards = [];\n\n\n      return dispatch({\n        type: GET_BOARDS,\n        payload: boards\n      });\n    });\n  };\n}\nexport function resetBoards() {\n  return {\n    type: RESET_BOARDS\n  };\n}\nexport function newBoard(board) {\n  board = new BoardModel();\n  return function (dispatch) {\n    return firebaseService.db.ref(\"board\").push(board).then(function (snapshot) {\n      history.push({\n        pathname: \"/scrumboard/boards/\".concat(snapshot.key, \"/\").concat(board.handle)\n      });\n      return dispatch({\n        type: NEW_BOARD,\n        board: board\n      });\n    });\n  };\n}","map":{"version":3,"sources":["/Users/msumaran/Documents/Proyectos/masternativos/src/app/scrumboard/store/actions/boards.actions.js"],"names":["history","BoardModel","firebaseService","_","GET_BOARDS","RESET_BOARDS","NEW_BOARD","getBoards","ref","db","dispatch","once","then","snapshot","boards","val","forEach","value","key","id","type","payload","resetBoards","newBoard","board","push","pathname","handle"],"mappings":"AAAA,OAAOA,OAAP,MAAoB,UAApB;AACA,OAAOC,UAAP,MAAuB,wBAAvB;AACA,OAAOC,eAAP,MAA4B,8BAA5B;AACA,OAAOC,CAAP,MAAc,SAAd;AACA,OAAO,IAAMC,UAAU,GAAG,6BAAnB;AACP,OAAO,IAAMC,YAAY,GAAG,+BAArB;AACP,OAAO,IAAMC,SAAS,GAAG,4BAAlB;AAEP,OAAO,SAASC,SAAT,GAAqB;AAExB,MAAIC,GAAG,GAAGN,eAAe,CAACO,EAAhB,CAAmBD,GAAnB,SAAV;AACA,SAAO,UAAAE,QAAQ;AAAA,WACXF,GAAG,CAACG,IAAJ,CAAS,OAAT,EACCC,IADD,CACM,UAAAC,QAAQ,EAAI;AACd,UAAIC,MAAM,GAAGD,QAAQ,CAACE,GAAT,EAAb;;AAEA,UAAID,MAAM,KAAK,IAAf,EAAqB;AACjBX,QAAAA,CAAC,CAACa,OAAF,CAAUF,MAAV,EAAkB,UAASG,KAAT,EAAgBC,GAAhB,EAAqB;AACnC,cAAID,KAAJ,EAAWA,KAAK,CAACE,EAAN,GAAWD,GAAX;AACd,SAFD;AAGH,OAJD,MAIO;AACHJ,QAAAA,MAAM,GAAG,EAAT;AACH,OATa,CAUf;;;AACC,aAAOJ,QAAQ,CAAC;AACZU,QAAAA,IAAI,EAAEhB,UADM;AAEZiB,QAAAA,OAAO,EAAEP;AAFG,OAAD,CAAf;AAKH,KAjBD,CADW;AAAA,GAAf;AAmBH;AAED,OAAO,SAASQ,WAAT,GAAuB;AAC1B,SAAO;AACHF,IAAAA,IAAI,EAAEf;AADH,GAAP;AAGH;AAED,OAAO,SAASkB,QAAT,CAAkBC,KAAlB,EAAyB;AAC5BA,EAAAA,KAAK,GAAG,IAAIvB,UAAJ,EAAR;AAEA,SAAO,UAAAS,QAAQ;AAAA,WACXR,eAAe,CAACO,EAAhB,CAAmBD,GAAnB,UACCiB,IADD,CACMD,KADN,EAECZ,IAFD,CAEM,UAAAC,QAAQ,EAAI;AAEdb,MAAAA,OAAO,CAACyB,IAAR,CAAa;AACTC,QAAAA,QAAQ,+BAAwBb,QAAQ,CAACK,GAAjC,cAAwCM,KAAK,CAACG,MAA9C;AADC,OAAb;AAGA,aAAOjB,QAAQ,CAAC;AACZU,QAAAA,IAAI,EAAEd,SADM;AAEZkB,QAAAA,KAAK,EAAEA;AAFK,OAAD,CAAf;AAIH,KAXD,CADW;AAAA,GAAf;AAaH","sourcesContent":["import history from '@history';\nimport BoardModel from '../../model/BoardModel';\nimport firebaseService from 'app/services/firebaseService';\nimport _ from '@lodash';\nexport const GET_BOARDS = '[SCRUMBOARD APP] GET BOARDS';\nexport const RESET_BOARDS = '[SCRUMBOARD APP] RESET BOARDS';\nexport const NEW_BOARD = '[SCRUMBOARD APP] NEW BOARD';\n\nexport function getBoards() {\n\n    let ref = firebaseService.db.ref(`board`);\n    return dispatch =>\n        ref.once('value')\n        .then(snapshot => {\n            let boards = snapshot.val();\n\n            if (boards !== null) {\n                _.forEach(boards, function(value, key) {\n                    if (value) value.id = key;\n                });\n            } else {\n                boards = [];\n            }\n          \t//boards = [];\n            return dispatch({\n                type: GET_BOARDS,\n                payload: boards\n            })\n\n        });\n}\n\nexport function resetBoards() {\n    return {\n        type: RESET_BOARDS\n    };\n}\n\nexport function newBoard(board) {\n    board = new BoardModel();\n\n    return dispatch =>\n        firebaseService.db.ref(`board`)\n        .push(board)\n        .then(snapshot => {\n\n            history.push({\n                pathname: `/scrumboard/boards/${snapshot.key}/${board.handle}`\n            });\n            return dispatch({\n                type: NEW_BOARD,\n                board: board\n            });\n        });\n}"]},"metadata":{},"sourceType":"module"}