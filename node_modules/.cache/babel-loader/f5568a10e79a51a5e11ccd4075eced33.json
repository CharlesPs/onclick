{"ast":null,"code":"import firebaseService from 'app/services/firebaseService';\nimport { getBoard } from './board.actions';\nexport var OPEN_CARD_DIALOG = '[SCRUMBOARD APP] OPEN CARD DIALOG';\nexport var CLOSE_CARD_DIALOG = '[SCRUMBOARD APP] CLOSE CARD DIALOG';\nexport var UPDATE_CARD = '[SCRUMBOARD APP] UPDATE CARD';\nexport var REMOVE_CARD = '[SCRUMBOARD APP] REMOVE CARD';\nexport function openCardDialog(data) {\n  return {\n    type: OPEN_CARD_DIALOG,\n    payload: data\n  };\n}\nexport function closeCardDialog() {\n  return {\n    type: CLOSE_CARD_DIALOG\n  };\n}\nexport function updateCard(boardId, card, list) {\n  console.log(card);\n  return function (dispatch, getState) {\n    firebaseService.db.ref(\"board/\".concat(boardId, \"/lists/\").concat(list.id, \"/cards/\").concat(card.id)).update(card).then(function () {\n      return dispatch(getBoard({\n        boardId: boardId\n      }));\n    }).catch(function (error) {\n      return {\n        errorCode: error.code,\n        errorMessage: error.message\n      };\n    });\n  };\n}\nexport function removeCard(boardId, listId, cardId) {\n  return function (dispatch, getState) {\n    firebaseService.db.ref(\"board/\".concat(boardId, \"/lists/\").concat(listId, \"/cards/\").concat(cardId)).remove().then(function () {\n      Promise.all([dispatch({\n        type: REMOVE_CARD,\n        boardId: boardId,\n        cardId: cardId\n      })]).then(function () {\n        return dispatch(getBoard({\n          boardId: boardId\n        }));\n      });\n    }).catch(function (error) {\n      return {\n        errorCode: error.code,\n        errorMessage: error.message\n      };\n    });\n  };\n}","map":{"version":3,"sources":["/Users/msumaran/Documents/Proyectos/masternativos/src/app/scrumboard/store/actions/card.actions.js"],"names":["firebaseService","getBoard","OPEN_CARD_DIALOG","CLOSE_CARD_DIALOG","UPDATE_CARD","REMOVE_CARD","openCardDialog","data","type","payload","closeCardDialog","updateCard","boardId","card","list","console","log","dispatch","getState","db","ref","id","update","then","catch","error","errorCode","code","errorMessage","message","removeCard","listId","cardId","remove","Promise","all"],"mappings":"AAAA,OAAOA,eAAP,MAA4B,8BAA5B;AACA,SAASC,QAAT,QAAyB,iBAAzB;AACA,OAAO,IAAMC,gBAAgB,GAAG,mCAAzB;AACP,OAAO,IAAMC,iBAAiB,GAAG,oCAA1B;AACP,OAAO,IAAMC,WAAW,GAAG,8BAApB;AACP,OAAO,IAAMC,WAAW,GAAG,8BAApB;AAEP,OAAO,SAASC,cAAT,CAAwBC,IAAxB,EAA8B;AACjC,SAAO;AACHC,IAAAA,IAAI,EAAEN,gBADH;AAEHO,IAAAA,OAAO,EAAEF;AAFN,GAAP;AAIH;AAED,OAAO,SAASG,eAAT,GAA2B;AAC9B,SAAO;AACHF,IAAAA,IAAI,EAAEL;AADH,GAAP;AAGH;AAED,OAAO,SAASQ,UAAT,CAAoBC,OAApB,EAA6BC,IAA7B,EAAmCC,IAAnC,EAAyC;AAC5CC,EAAAA,OAAO,CAACC,GAAR,CAAYH,IAAZ;AACA,SAAO,UAACI,QAAD,EAAWC,QAAX,EAAwB;AAC3BlB,IAAAA,eAAe,CAACmB,EAAhB,CAAmBC,GAAnB,iBAAgCR,OAAhC,oBAAiDE,IAAI,CAACO,EAAtD,oBAAkER,IAAI,CAACQ,EAAvE,GAA6EC,MAA7E,CAAoFT,IAApF,EAA0FU,IAA1F,CAA+F,YAAM;AACjG,aAAON,QAAQ,CAAChB,QAAQ,CAAC;AAAEW,QAAAA,OAAO,EAAEA;AAAX,OAAD,CAAT,CAAf;AACH,KAFD,EAEGY,KAFH,CAES,UAAAC,KAAK,EAAI;AACd,aAAO;AACHC,QAAAA,SAAS,EAAED,KAAK,CAACE,IADd;AAEHC,QAAAA,YAAY,EAAEH,KAAK,CAACI;AAFjB,OAAP;AAIH,KAPD;AAQH,GATD;AAUH;AACD,OAAO,SAASC,UAAT,CAAoBlB,OAApB,EAA6BmB,MAA7B,EAAqCC,MAArC,EAA6C;AAChD,SAAO,UAACf,QAAD,EAAWC,QAAX,EAAwB;AAC3BlB,IAAAA,eAAe,CAACmB,EAAhB,CAAmBC,GAAnB,iBAAgCR,OAAhC,oBAAiDmB,MAAjD,oBAAiEC,MAAjE,GAA2EC,MAA3E,GAAoFV,IAApF,CAAyF,YAAM;AAC3FW,MAAAA,OAAO,CAACC,GAAR,CAAY,CACRlB,QAAQ,CAAC;AACLT,QAAAA,IAAI,EAAEH,WADD;AAELO,QAAAA,OAAO,EAAPA,OAFK;AAGLoB,QAAAA,MAAM,EAANA;AAHK,OAAD,CADA,CAAZ,EAMGT,IANH,CAMQ;AAAA,eAAMN,QAAQ,CAAChB,QAAQ,CAAC;AAAEW,UAAAA,OAAO,EAAEA;AAAX,SAAD,CAAT,CAAd;AAAA,OANR;AAOH,KARD,EAQGY,KARH,CAQS,UAAAC,KAAK,EAAI;AACd,aAAO;AACHC,QAAAA,SAAS,EAAED,KAAK,CAACE,IADd;AAEHC,QAAAA,YAAY,EAAEH,KAAK,CAACI;AAFjB,OAAP;AAIH,KAbD;AAeH,GAhBD;AAiBH","sourcesContent":["import firebaseService from 'app/services/firebaseService';\nimport { getBoard } from './board.actions';\nexport const OPEN_CARD_DIALOG = '[SCRUMBOARD APP] OPEN CARD DIALOG';\nexport const CLOSE_CARD_DIALOG = '[SCRUMBOARD APP] CLOSE CARD DIALOG';\nexport const UPDATE_CARD = '[SCRUMBOARD APP] UPDATE CARD';\nexport const REMOVE_CARD = '[SCRUMBOARD APP] REMOVE CARD';\n\nexport function openCardDialog(data) {\n    return {\n        type: OPEN_CARD_DIALOG,\n        payload: data\n    };\n}\n\nexport function closeCardDialog() {\n    return {\n        type: CLOSE_CARD_DIALOG\n    };\n}\n\nexport function updateCard(boardId, card, list) {\n    console.log(card);\n    return (dispatch, getState) => {\n        firebaseService.db.ref(`board/${boardId}/lists/${list.id}/cards/${card.id}`).update(card).then(() => {\n            return dispatch(getBoard({ boardId: boardId }));\n        }).catch(error => {\n            return {\n                errorCode: error.code,\n                errorMessage: error.message\n            }\n        });\n    };\n}\nexport function removeCard(boardId, listId, cardId) {\n    return (dispatch, getState) => {\n        firebaseService.db.ref(`board/${boardId}/lists/${listId}/cards/${cardId}`).remove().then(() => {\n            Promise.all([\n                dispatch({\n                    type: REMOVE_CARD,\n                    boardId,\n                    cardId\n                })\n            ]).then(() => dispatch(getBoard({ boardId: boardId })));\n        }).catch(error => {\n            return {\n                errorCode: error.code,\n                errorMessage: error.message\n            }\n        });\n\n    };\n}"]},"metadata":{},"sourceType":"module"}