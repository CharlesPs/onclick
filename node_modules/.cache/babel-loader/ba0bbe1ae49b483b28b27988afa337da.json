{"ast":null,"code":"var _jsxFileName = \"/Users/msumaran/Documents/Proyectos/masternativos/src/@fuse/core/FuseNavigation/vertical/FuseNavVerticalItem.js\";\nimport NavLinkAdapter from '@fuse/core/NavLinkAdapter';\nimport FuseUtils from '@fuse/utils';\nimport Icon from '@material-ui/core/Icon';\nimport ListItem from '@material-ui/core/ListItem';\nimport ListItemText from '@material-ui/core/ListItemText';\nimport { makeStyles } from '@material-ui/core/styles';\nimport * as Actions from 'app/store/actions';\nimport clsx from 'clsx';\nimport PropTypes from 'prop-types';\nimport React from 'react';\nimport { useTranslation } from 'react-i18next';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { withRouter } from 'react-router-dom';\nimport FuseNavBadge from '../FuseNavBadge';\nvar useStyles = makeStyles(function (theme) {\n  return {\n    item: function item(props) {\n      return {\n        height: 40,\n        width: 'calc(100% - 16px)',\n        // borderRadius: '0 20px 20px 0',\n        borderRadius: '0',\n        paddingRight: 12,\n        paddingLeft: props.itemPadding > 80 ? 80 : props.itemPadding,\n        '&.active': {\n          backgroundColor: theme.palette.secondary.main,\n          color: \"\".concat(theme.palette.secondary.contrastText, \"!important\"),\n          pointerEvents: 'none',\n          transition: 'border-radius .15s cubic-bezier(0.4,0.0,0.2,1)',\n          '& .list-item-text-primary': {\n            color: 'inherit'\n          },\n          '& .list-item-icon': {\n            color: 'inherit'\n          }\n        },\n        '& .list-item-icon': {\n          marginRight: 16\n        },\n        '& .list-item-text': {},\n        color: theme.palette.text.primary,\n        cursor: 'pointer',\n        textDecoration: 'none!important'\n      };\n    }\n  };\n});\n\nfunction FuseNavVerticalItem(props) {\n  var dispatch = useDispatch();\n  var userRole = useSelector(function (_ref) {\n    var auth = _ref.auth;\n    return auth.user.role;\n  });\n  var item = props.item,\n      nestedLevel = props.nestedLevel;\n  var classes = useStyles({\n    itemPadding: nestedLevel > 0 ? 40 + nestedLevel * 16 : 24\n  });\n\n  var _useTranslation = useTranslation('navigation'),\n      t = _useTranslation.t;\n\n  if (!FuseUtils.hasPermission(item.auth, userRole)) {\n    return null;\n  }\n\n  return /*#__PURE__*/React.createElement(ListItem, {\n    button: true,\n    component: NavLinkAdapter,\n    to: item.url,\n    activeClassName: \"active\",\n    className: clsx(classes.item, 'list-item'),\n    onClick: function onClick(ev) {\n      return dispatch(Actions.navbarCloseMobile());\n    },\n    exact: item.exact,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 3\n    }\n  }, item.icon && /*#__PURE__*/React.createElement(Icon, {\n    className: \"list-item-icon text-16 flex-shrink-0\",\n    color: \"action\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 70,\n      columnNumber: 5\n    }\n  }, item.icon), /*#__PURE__*/React.createElement(ListItemText, {\n    className: \"list-item-text\",\n    primary: item.translate ? t(item.translate) : item.title,\n    classes: {\n      primary: 'text-14 list-item-text-primary'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 75,\n      columnNumber: 4\n    }\n  }), item.badge && /*#__PURE__*/React.createElement(FuseNavBadge, {\n    badge: item.badge,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 81,\n      columnNumber: 19\n    }\n  }));\n}\n\nFuseNavVerticalItem.propTypes = {\n  item: PropTypes.shape({\n    id: PropTypes.string.isRequired,\n    title: PropTypes.string,\n    icon: PropTypes.string,\n    url: PropTypes.string\n  })\n};\nFuseNavVerticalItem.defaultProps = {};\nvar NavVerticalItem = withRouter(React.memo(FuseNavVerticalItem));\nexport default NavVerticalItem;","map":{"version":3,"sources":["/Users/msumaran/Documents/Proyectos/masternativos/src/@fuse/core/FuseNavigation/vertical/FuseNavVerticalItem.js"],"names":["NavLinkAdapter","FuseUtils","Icon","ListItem","ListItemText","makeStyles","Actions","clsx","PropTypes","React","useTranslation","useDispatch","useSelector","withRouter","FuseNavBadge","useStyles","theme","item","props","height","width","borderRadius","paddingRight","paddingLeft","itemPadding","backgroundColor","palette","secondary","main","color","contrastText","pointerEvents","transition","marginRight","text","primary","cursor","textDecoration","FuseNavVerticalItem","dispatch","userRole","auth","user","role","nestedLevel","classes","t","hasPermission","url","ev","navbarCloseMobile","exact","icon","translate","title","badge","propTypes","shape","id","string","isRequired","defaultProps","NavVerticalItem","memo"],"mappings":"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","sourcesContent":["import NavLinkAdapter from '@fuse/core/NavLinkAdapter';\nimport FuseUtils from '@fuse/utils';\nimport Icon from '@material-ui/core/Icon';\nimport ListItem from '@material-ui/core/ListItem';\nimport ListItemText from '@material-ui/core/ListItemText';\nimport { makeStyles } from '@material-ui/core/styles';\nimport * as Actions from 'app/store/actions';\nimport clsx from 'clsx';\nimport PropTypes from 'prop-types';\nimport React from 'react';\nimport { useTranslation } from 'react-i18next';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { withRouter } from 'react-router-dom';\nimport FuseNavBadge from '../FuseNavBadge';\n\nconst useStyles = makeStyles(theme => ({\n\titem: props => ({\n\t\theight: 40,\n\t\twidth: 'calc(100% - 16px)',\n\t\t// borderRadius: '0 20px 20px 0',\n\t\tborderRadius: '0',\n\t\tpaddingRight: 12,\n\t\tpaddingLeft: props.itemPadding > 80 ? 80 : props.itemPadding,\n\t\t'&.active': {\n\t\t\tbackgroundColor: theme.palette.secondary.main,\n\t\t\tcolor: `${theme.palette.secondary.contrastText}!important`,\n\t\t\tpointerEvents: 'none',\n\t\t\ttransition: 'border-radius .15s cubic-bezier(0.4,0.0,0.2,1)',\n\t\t\t'& .list-item-text-primary': {\n\t\t\t\tcolor: 'inherit'\n\t\t\t},\n\t\t\t'& .list-item-icon': {\n\t\t\t\tcolor: 'inherit'\n\t\t\t}\n\t\t},\n\t\t'& .list-item-icon': {\n\t\t\tmarginRight: 16\n\t\t},\n\t\t'& .list-item-text': {},\n\t\tcolor: theme.palette.text.primary,\n\t\tcursor: 'pointer',\n\t\ttextDecoration: 'none!important'\n\t})\n}));\n\nfunction FuseNavVerticalItem(props) {\n\tconst dispatch = useDispatch();\n\tconst userRole = useSelector(({ auth }) => auth.user.role);\n\tconst { item, nestedLevel } = props;\n\tconst classes = useStyles({\n\t\titemPadding: nestedLevel > 0 ? 40 + nestedLevel * 16 : 24\n\t});\n\tconst { t } = useTranslation('navigation');\n\n\tif (!FuseUtils.hasPermission(item.auth, userRole)) {\n\t\treturn null;\n\t}\n\n\treturn (\n\t\t<ListItem\n\t\t\tbutton\n\t\t\tcomponent={NavLinkAdapter}\n\t\t\tto={item.url}\n\t\t\tactiveClassName=\"active\"\n\t\t\tclassName={clsx(classes.item, 'list-item')}\n\t\t\tonClick={ev => dispatch(Actions.navbarCloseMobile())}\n\t\t\texact={item.exact}\n\t\t>\n\t\t\t{item.icon && (\n\t\t\t\t<Icon className=\"list-item-icon text-16 flex-shrink-0\" color=\"action\">\n\t\t\t\t\t{item.icon}\n\t\t\t\t</Icon>\n\t\t\t)}\n\n\t\t\t<ListItemText\n\t\t\t\tclassName=\"list-item-text\"\n\t\t\t\tprimary={item.translate ? t(item.translate) : item.title}\n\t\t\t\tclasses={{ primary: 'text-14 list-item-text-primary' }}\n\t\t\t/>\n\n\t\t\t{item.badge && <FuseNavBadge badge={item.badge} />}\n\t\t</ListItem>\n\t);\n}\n\nFuseNavVerticalItem.propTypes = {\n\titem: PropTypes.shape({\n\t\tid: PropTypes.string.isRequired,\n\t\ttitle: PropTypes.string,\n\t\ticon: PropTypes.string,\n\t\turl: PropTypes.string\n\t})\n};\n\nFuseNavVerticalItem.defaultProps = {};\n\nconst NavVerticalItem = withRouter(React.memo(FuseNavVerticalItem));\n\nexport default NavVerticalItem;\n"]},"metadata":{},"sourceType":"module"}