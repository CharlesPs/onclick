{"ast":null,"code":"import _classCallCheck from \"/Users/msumaran/Documents/Proyectos/masternativos/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/msumaran/Documents/Proyectos/masternativos/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport firebase from 'firebase/app';\nimport 'firebase/auth';\nimport 'firebase/database';\nimport config from './firebaseServiceConfig';\n\nvar FirebaseService = /*#__PURE__*/function () {\n  function FirebaseService() {\n    var _this = this;\n\n    _classCallCheck(this, FirebaseService);\n\n    this.getUserData = function (userId) {\n      if (!firebase.apps.length) {\n        return false;\n      }\n\n      console.log(userId);\n      return new Promise(function (resolve, reject) {\n        _this.db.ref(\"users/\".concat(userId)).once('value').then(function (snapshot) {\n          var user = snapshot.val();\n          resolve(user);\n        }).catch(function (e) {\n          console.log(e); // \"oh, no!\"\n\n          return false;\n        });\n      });\n    };\n\n    this.updateUserData = function (user) {\n      if (!firebase.apps.length) {\n        return false;\n      }\n\n      return _this.db.ref(\"users/\".concat(user.uid)).set(user);\n    };\n\n    this.onAuthStateChanged = function (callback) {\n      if (!_this.auth) {\n        return;\n      }\n\n      _this.auth.onAuthStateChanged(callback);\n    };\n\n    this.signOut = function () {\n      if (!_this.auth) {\n        return;\n      }\n\n      _this.auth.signOut();\n    };\n  }\n\n  _createClass(FirebaseService, [{\n    key: \"init\",\n    value: function init(success) {\n      if (Object.entries(config).length === 0 && config.constructor === Object) {\n        if (process.env.NODE_ENV === 'development') {\n          console.warn('Missing Firebase Configuration at src/app/services/firebaseService/firebaseServiceConfig.js');\n        }\n\n        success(false);\n        return;\n      }\n\n      if (firebase.apps.length) {\n        return;\n      }\n\n      firebase.initializeApp(config);\n      this.db = firebase.database();\n      this.auth = firebase.auth();\n      success(true);\n    }\n  }]);\n\n  return FirebaseService;\n}();\n\nvar instance = new FirebaseService();\nexport default instance;","map":{"version":3,"sources":["/Users/msumaran/Documents/Proyectos/masternativos/src/app/services/firebaseService/firebaseService.js"],"names":["firebase","config","FirebaseService","getUserData","userId","apps","length","console","log","Promise","resolve","reject","db","ref","once","then","snapshot","user","val","catch","e","updateUserData","uid","set","onAuthStateChanged","callback","auth","signOut","success","Object","entries","constructor","process","env","NODE_ENV","warn","initializeApp","database","instance"],"mappings":";;AAAA,OAAOA,QAAP,MAAqB,cAArB;AACA,OAAO,eAAP;AACA,OAAO,mBAAP;AACA,OAAOC,MAAP,MAAmB,yBAAnB;;IAEMC,e;;;;;;SA8BFC,W,GAAc,UAAAC,MAAM,EAAI;AACpB,UAAI,CAACJ,QAAQ,CAACK,IAAT,CAAcC,MAAnB,EAA2B;AACvB,eAAO,KAAP;AACH;;AACDC,MAAAA,OAAO,CAACC,GAAR,CAAYJ,MAAZ;AAEA,aAAO,IAAIK,OAAJ,CAAY,UAACC,OAAD,EAAUC,MAAV,EAAqB;AACpC,QAAA,KAAI,CAACC,EAAL,CACKC,GADL,iBACkBT,MADlB,GAEKU,IAFL,CAEU,OAFV,EAGKC,IAHL,CAGU,UAAAC,QAAQ,EAAI;AACd,cAAMC,IAAI,GAAGD,QAAQ,CAACE,GAAT,EAAb;AACAR,UAAAA,OAAO,CAACO,IAAD,CAAP;AACH,SANL,EAMOE,KANP,CAMa,UAAUC,CAAV,EAAa;AAClBb,UAAAA,OAAO,CAACC,GAAR,CAAYY,CAAZ,EADkB,CACF;;AAChB,iBAAO,KAAP;AACH,SATL;AAUH,OAXM,CAAP;AAYH,K;;SAEDC,c,GAAiB,UAAAJ,IAAI,EAAI;AACrB,UAAI,CAACjB,QAAQ,CAACK,IAAT,CAAcC,MAAnB,EAA2B;AACvB,eAAO,KAAP;AACH;;AAED,aAAO,KAAI,CAACM,EAAL,CAAQC,GAAR,iBAAqBI,IAAI,CAACK,GAA1B,GAAiCC,GAAjC,CAAqCN,IAArC,CAAP;AACH,K;;SAEDO,kB,GAAqB,UAAAC,QAAQ,EAAI;AAC7B,UAAI,CAAC,KAAI,CAACC,IAAV,EAAgB;AACZ;AACH;;AACD,MAAA,KAAI,CAACA,IAAL,CAAUF,kBAAV,CAA6BC,QAA7B;AACH,K;;SAEDE,O,GAAU,YAAM;AACZ,UAAI,CAAC,KAAI,CAACD,IAAV,EAAgB;AACZ;AACH;;AACD,MAAA,KAAI,CAACA,IAAL,CAAUC,OAAV;AACH,K;;;;;yBArEIC,O,EAAS;AAEV,UAAIC,MAAM,CAACC,OAAP,CAAe7B,MAAf,EAAuBK,MAAvB,KAAkC,CAAlC,IAAuCL,MAAM,CAAC8B,WAAP,KAAuBF,MAAlE,EAA0E;AACtE,YAAIG,OAAO,CAACC,GAAR,CAAYC,QAAZ,KAAyB,aAA7B,EAA4C;AACxC3B,UAAAA,OAAO,CAAC4B,IAAR,CACI,6FADJ;AAGH;;AACDP,QAAAA,OAAO,CAAC,KAAD,CAAP;AACA;AACH;;AAED,UAAI5B,QAAQ,CAACK,IAAT,CAAcC,MAAlB,EAA0B;AACtB;AACH;;AAGDN,MAAAA,QAAQ,CAACoC,aAAT,CAAuBnC,MAAvB;AAEA,WAAKW,EAAL,GAAUZ,QAAQ,CAACqC,QAAT,EAAV;AAEA,WAAKX,IAAL,GAAY1B,QAAQ,CAAC0B,IAAT,EAAZ;AAEAE,MAAAA,OAAO,CAAC,IAAD,CAAP;AACH;;;;;;AAgDL,IAAMU,QAAQ,GAAG,IAAIpC,eAAJ,EAAjB;AAEA,eAAeoC,QAAf","sourcesContent":["import firebase from 'firebase/app';\nimport 'firebase/auth';\nimport 'firebase/database';\nimport config from './firebaseServiceConfig';\n\nclass FirebaseService {\n    init(success) {\n\n        if (Object.entries(config).length === 0 && config.constructor === Object) {\n            if (process.env.NODE_ENV === 'development') {\n                console.warn(\n                    'Missing Firebase Configuration at src/app/services/firebaseService/firebaseServiceConfig.js'\n                );\n            }\n            success(false);\n            return;\n        }\n\n        if (firebase.apps.length) {\n            return;\n        }\n\n\n        firebase.initializeApp(config);\n\n        this.db = firebase.database();\n\n        this.auth = firebase.auth();\n\n        success(true);\n    }\n\n\n\n\n    getUserData = userId => {\n        if (!firebase.apps.length) {\n            return false;\n        }\n        console.log(userId);\n\n        return new Promise((resolve, reject) => {\n            this.db\n                .ref(`users/${userId}`)\n                .once('value')\n                .then(snapshot => {\n                    const user = snapshot.val();\n                    resolve(user);\n                }).catch(function (e) {\n                    console.log(e); // \"oh, no!\"\n                    return false;\n                });\n        });\n    };\n\n    updateUserData = user => {\n        if (!firebase.apps.length) {\n            return false;\n        }\n\n        return this.db.ref(`users/${user.uid}`).set(user);\n    };\n\n    onAuthStateChanged = callback => {\n        if (!this.auth) {\n            return;\n        }\n        this.auth.onAuthStateChanged(callback);\n    };\n\n    signOut = () => {\n        if (!this.auth) {\n            return;\n        }\n        this.auth.signOut();\n    };\n}\n\nconst instance = new FirebaseService();\n\nexport default instance;"]},"metadata":{},"sourceType":"module"}