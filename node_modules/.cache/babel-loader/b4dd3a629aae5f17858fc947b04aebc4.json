{"ast":null,"code":"import { showMessage } from 'app/store/actions/fuse';\nimport axios from 'axios';\nimport firebaseService from 'app/services/firebaseService';\nimport * as BoardsActions from './boards.actions';\nexport var OPEN_CARD_DIALOG = '[SCRUMBOARD APP] OPEN CARD DIALOG';\nexport var CLOSE_CARD_DIALOG = '[SCRUMBOARD APP] CLOSE CARD DIALOG';\nexport var UPDATE_CARD = '[SCRUMBOARD APP] UPDATE CARD';\nexport var REMOVE_CARD = '[SCRUMBOARD APP] REMOVE CARD';\nexport function openCardDialog(data) {\n  return {\n    type: OPEN_CARD_DIALOG,\n    payload: data\n  };\n}\nexport function closeCardDialog() {\n  return {\n    type: CLOSE_CARD_DIALOG\n  };\n}\nexport function updateCard(boardId, card, list) {\n  console.log(list.id);\n  return function (dispatch, getState) {\n    firebaseService.db.ref(\"board/\".concat(boardId, \"/lists/\").concat(list.id, \"/cards/\").concat(card.id)).update(card).then(function () {\n      Promise.all([dispatch({\n        type: UPDATE_CARD,\n        payload: card\n      })]).then(function () {\n        return dispatch(getBoard({\n          boardId: boardId\n        }));\n      }); // return dispatch({\n      //         type: UPDATE_CARD,\n      //         payload: card\n      //     });\n    }).catch(function (error) {\n      return {\n        errorCode: error.code,\n        errorMessage: error.message\n      };\n    });\n  }; // return dispatch => {\n  // \tconst request = axios.post('/api/scrumboard-app/card/update', {\n  // \t\tboardId,\n  // \t\tcard\n  // \t});\n  // \treturn request.then(response => {\n  // \t\tdispatch(\n  // \t\t\tshowMessage({\n  // \t\t\t\tmessage: 'Card Saved',\n  // \t\t\t\tautoHideDuration: 2000,\n  // \t\t\t\tanchorOrigin: {\n  // \t\t\t\t\tvertical: 'top',\n  // \t\t\t\t\thorizontal: 'right'\n  // \t\t\t\t}\n  // \t\t\t})\n  // \t\t);\n  // \t\treturn dispatch({\n  // \t\t\ttype: UPDATE_CARD,\n  // \t\t\tpayload: card\n  // \t\t});\n  // \t});\n  // };\n}\nexport function removeCard(boardId, cardId) {\n  return function (dispatch) {\n    var request = axios.post('/api/scrumboard-app/card/remove', {\n      boardId: boardId,\n      cardId: cardId\n    });\n    return request.then(function (response) {\n      return dispatch({\n        type: REMOVE_CARD,\n        boardId: boardId,\n        cardId: cardId\n      });\n    });\n  };\n}","map":{"version":3,"sources":["/Users/msumaran/Documents/Proyectos/masternativos/src/app/scrumboard/store/actions/card.actions.js"],"names":["showMessage","axios","firebaseService","BoardsActions","OPEN_CARD_DIALOG","CLOSE_CARD_DIALOG","UPDATE_CARD","REMOVE_CARD","openCardDialog","data","type","payload","closeCardDialog","updateCard","boardId","card","list","console","log","id","dispatch","getState","db","ref","update","then","Promise","all","getBoard","catch","error","errorCode","code","errorMessage","message","removeCard","cardId","request","post","response"],"mappings":"AAAA,SAASA,WAAT,QAA4B,wBAA5B;AACA,OAAOC,KAAP,MAAkB,OAAlB;AACA,OAAOC,eAAP,MAA4B,8BAA5B;AACA,OAAO,KAAKC,aAAZ,MAA+B,kBAA/B;AACA,OAAO,IAAMC,gBAAgB,GAAG,mCAAzB;AACP,OAAO,IAAMC,iBAAiB,GAAG,oCAA1B;AACP,OAAO,IAAMC,WAAW,GAAG,8BAApB;AACP,OAAO,IAAMC,WAAW,GAAG,8BAApB;AAEP,OAAO,SAASC,cAAT,CAAwBC,IAAxB,EAA8B;AACjC,SAAO;AACHC,IAAAA,IAAI,EAAEN,gBADH;AAEHO,IAAAA,OAAO,EAAEF;AAFN,GAAP;AAIH;AAED,OAAO,SAASG,eAAT,GAA2B;AAC9B,SAAO;AACHF,IAAAA,IAAI,EAAEL;AADH,GAAP;AAGH;AAED,OAAO,SAASQ,UAAT,CAAoBC,OAApB,EAA6BC,IAA7B,EAAmCC,IAAnC,EAAyC;AAC5CC,EAAAA,OAAO,CAACC,GAAR,CAAYF,IAAI,CAACG,EAAjB;AACA,SAAO,UAACC,QAAD,EAAWC,QAAX,EAAwB;AAC3BnB,IAAAA,eAAe,CAACoB,EAAhB,CAAmBC,GAAnB,iBAAgCT,OAAhC,oBAAiDE,IAAI,CAACG,EAAtD,oBAAkEJ,IAAI,CAACI,EAAvE,GAA6EK,MAA7E,CAAoFT,IAApF,EAA0FU,IAA1F,CAA+F,YAAM;AACjGC,MAAAA,OAAO,CAACC,GAAR,CAAY,CACRP,QAAQ,CAAC;AACLV,QAAAA,IAAI,EAAEJ,WADD;AAELK,QAAAA,OAAO,EAAEI;AAFJ,OAAD,CADA,CAAZ,EAKGU,IALH,CAKQ;AAAA,eAAML,QAAQ,CAACQ,QAAQ,CAAC;AAAEd,UAAAA,OAAO,EAAEA;AAAX,SAAD,CAAT,CAAd;AAAA,OALR,EADiG,CAOjG;AACA;AACA;AACA;AACH,KAXD,EAWGe,KAXH,CAWS,UAAAC,KAAK,EAAI;AACd,aAAO;AACHC,QAAAA,SAAS,EAAED,KAAK,CAACE,IADd;AAEHC,QAAAA,YAAY,EAAEH,KAAK,CAACI;AAFjB,OAAP;AAIH,KAhBD;AAiBH,GAlBD,CAF4C,CAsB5C;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACH;AAED,OAAO,SAASC,UAAT,CAAoBrB,OAApB,EAA6BsB,MAA7B,EAAqC;AACxC,SAAO,UAAAhB,QAAQ,EAAI;AACf,QAAMiB,OAAO,GAAGpC,KAAK,CAACqC,IAAN,CAAW,iCAAX,EAA8C;AAC1DxB,MAAAA,OAAO,EAAPA,OAD0D;AAE1DsB,MAAAA,MAAM,EAANA;AAF0D,KAA9C,CAAhB;AAKA,WAAOC,OAAO,CAACZ,IAAR,CAAa,UAAAc,QAAQ;AAAA,aACxBnB,QAAQ,CAAC;AACLV,QAAAA,IAAI,EAAEH,WADD;AAELO,QAAAA,OAAO,EAAPA,OAFK;AAGLsB,QAAAA,MAAM,EAANA;AAHK,OAAD,CADgB;AAAA,KAArB,CAAP;AAOH,GAbD;AAcH","sourcesContent":["import { showMessage } from 'app/store/actions/fuse';\nimport axios from 'axios';\nimport firebaseService from 'app/services/firebaseService';\nimport * as BoardsActions from './boards.actions';\nexport const OPEN_CARD_DIALOG = '[SCRUMBOARD APP] OPEN CARD DIALOG';\nexport const CLOSE_CARD_DIALOG = '[SCRUMBOARD APP] CLOSE CARD DIALOG';\nexport const UPDATE_CARD = '[SCRUMBOARD APP] UPDATE CARD';\nexport const REMOVE_CARD = '[SCRUMBOARD APP] REMOVE CARD';\n\nexport function openCardDialog(data) {\n    return {\n        type: OPEN_CARD_DIALOG,\n        payload: data\n    };\n}\n\nexport function closeCardDialog() {\n    return {\n        type: CLOSE_CARD_DIALOG\n    };\n}\n\nexport function updateCard(boardId, card, list) {\n    console.log(list.id);\n    return (dispatch, getState) => {\n        firebaseService.db.ref(`board/${boardId}/lists/${list.id}/cards/${card.id}`).update(card).then(() => {\n            Promise.all([\n                dispatch({\n                    type: UPDATE_CARD,\n                    payload: card\n                })\n            ]).then(() => dispatch(getBoard({ boardId: boardId })));\n            // return dispatch({\n            //         type: UPDATE_CARD,\n            //         payload: card\n            //     });\n        }).catch(error => {\n            return {\n                errorCode: error.code,\n                errorMessage: error.message\n            }\n        });\n    };\n\n    // return dispatch => {\n    // \tconst request = axios.post('/api/scrumboard-app/card/update', {\n    // \t\tboardId,\n    // \t\tcard\n    // \t});\n\n    // \treturn request.then(response => {\n    // \t\tdispatch(\n    // \t\t\tshowMessage({\n    // \t\t\t\tmessage: 'Card Saved',\n    // \t\t\t\tautoHideDuration: 2000,\n    // \t\t\t\tanchorOrigin: {\n    // \t\t\t\t\tvertical: 'top',\n    // \t\t\t\t\thorizontal: 'right'\n    // \t\t\t\t}\n    // \t\t\t})\n    // \t\t);\n\n    // \t\treturn dispatch({\n    // \t\t\ttype: UPDATE_CARD,\n    // \t\t\tpayload: card\n    // \t\t});\n    // \t});\n    // };\n}\n\nexport function removeCard(boardId, cardId) {\n    return dispatch => {\n        const request = axios.post('/api/scrumboard-app/card/remove', {\n            boardId,\n            cardId\n        });\n\n        return request.then(response =>\n            dispatch({\n                type: REMOVE_CARD,\n                boardId,\n                cardId\n            })\n        );\n    };\n}"]},"metadata":{},"sourceType":"module"}