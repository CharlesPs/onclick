{"ast":null,"code":"import _toConsumableArray from \"/Users/msumaran/Documents/Proyectos/masternativos/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/toConsumableArray\";\nimport _objectSpread from \"/Users/msumaran/Documents/Proyectos/masternativos/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectSpread2\";\nimport _ from '@lodash';\nimport * as Actions from '../actions';\nvar initialState = {\n  entities: null,\n  searchText: '',\n  selectedContactIds: [],\n  routeParams: {},\n  contactDialog: {\n    type: 'new',\n    props: {\n      open: false\n    },\n    data: null\n  }\n};\n\nvar contactsReducer = function contactsReducer() {\n  var state = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : initialState;\n  var action = arguments.length > 1 ? arguments[1] : undefined;\n\n  switch (action.type) {\n    case Actions.GET_CONTACTS:\n      {\n        return _objectSpread(_objectSpread({}, state), {}, {\n          //entities: _.keyBy(action.payload, 'id'),\n          entities: action.payload,\n          routeParams: action.routeParams\n        });\n      }\n\n    case Actions.SET_SEARCH_TEXT:\n      {\n        return _objectSpread(_objectSpread({}, state), {}, {\n          searchText: action.searchText\n        });\n      }\n\n    case Actions.TOGGLE_IN_SELECTED_CONTACTS:\n      {\n        var contactId = action.contactId;\n\n        var selectedContactIds = _toConsumableArray(state.selectedContactIds);\n\n        if (selectedContactIds.find(function (id) {\n          return id === contactId;\n        }) !== undefined) {\n          selectedContactIds = selectedContactIds.filter(function (id) {\n            return id !== contactId;\n          });\n        } else {\n          selectedContactIds = [].concat(_toConsumableArray(selectedContactIds), [contactId]);\n        }\n\n        return _objectSpread(_objectSpread({}, state), {}, {\n          selectedContactIds: selectedContactIds\n        });\n      }\n\n    case Actions.SELECT_ALL_CONTACTS:\n      {\n        var arr = Object.keys(state.entities).map(function (k) {\n          return state.entities[k];\n        });\n\n        var _selectedContactIds = arr.map(function (contact) {\n          return contact.id;\n        });\n\n        return _objectSpread(_objectSpread({}, state), {}, {\n          selectedContactIds: _selectedContactIds\n        });\n      }\n\n    case Actions.DESELECT_ALL_CONTACTS:\n      {\n        return _objectSpread(_objectSpread({}, state), {}, {\n          selectedContactIds: []\n        });\n      }\n\n    case Actions.OPEN_NEW_CONTACT_DIALOG:\n      {\n        return _objectSpread(_objectSpread({}, state), {}, {\n          contactDialog: {\n            type: 'new',\n            props: {\n              open: true\n            },\n            data: null\n          }\n        });\n      }\n\n    case Actions.CLOSE_NEW_CONTACT_DIALOG:\n      {\n        return _objectSpread(_objectSpread({}, state), {}, {\n          contactDialog: {\n            type: 'new',\n            props: {\n              open: false\n            },\n            data: null\n          }\n        });\n      }\n\n    case Actions.OPEN_EDIT_CONTACT_DIALOG:\n      {\n        return _objectSpread(_objectSpread({}, state), {}, {\n          contactDialog: {\n            type: 'edit',\n            props: {\n              open: true\n            },\n            data: action.data\n          }\n        });\n      }\n\n    case Actions.CLOSE_EDIT_CONTACT_DIALOG:\n      {\n        return _objectSpread(_objectSpread({}, state), {}, {\n          contactDialog: {\n            type: 'edit',\n            props: {\n              open: false\n            },\n            data: null\n          }\n        });\n      }\n\n    default:\n      {\n        return state;\n      }\n  }\n};\n\nexport default contactsReducer;","map":{"version":3,"sources":["/Users/msumaran/Documents/Proyectos/masternativos/src/app/contacts/store/reducers/contacts.reducer.js"],"names":["_","Actions","initialState","entities","searchText","selectedContactIds","routeParams","contactDialog","type","props","open","data","contactsReducer","state","action","GET_CONTACTS","payload","SET_SEARCH_TEXT","TOGGLE_IN_SELECTED_CONTACTS","contactId","find","id","undefined","filter","SELECT_ALL_CONTACTS","arr","Object","keys","map","k","contact","DESELECT_ALL_CONTACTS","OPEN_NEW_CONTACT_DIALOG","CLOSE_NEW_CONTACT_DIALOG","OPEN_EDIT_CONTACT_DIALOG","CLOSE_EDIT_CONTACT_DIALOG"],"mappings":"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","sourcesContent":["import _ from '@lodash';\nimport * as Actions from '../actions';\n\nconst initialState = {\n\tentities: null,\n\tsearchText: '',\n\tselectedContactIds: [],\n\trouteParams: {},\n\tcontactDialog: {\n\t\ttype: 'new',\n\t\tprops: {\n\t\t\topen: false\n\t\t},\n\t\tdata: null\n\t}\n};\n\nconst contactsReducer = (state = initialState, action) => {\n\tswitch (action.type) {\n\t\tcase Actions.GET_CONTACTS: {\n\t\t\treturn {\n\t\t\t\t...state,\n\t\t\t\t//entities: _.keyBy(action.payload, 'id'),\n\t\t\t\tentities: action.payload,\n\t\t\t\trouteParams: action.routeParams\n\t\t\t};\n\t\t}\n\t\tcase Actions.SET_SEARCH_TEXT: {\n\t\t\treturn {\n\t\t\t\t...state,\n\t\t\t\tsearchText: action.searchText\n\t\t\t};\n\t\t}\n\t\tcase Actions.TOGGLE_IN_SELECTED_CONTACTS: {\n\t\t\tconst { contactId } = action;\n\n\t\t\tlet selectedContactIds = [...state.selectedContactIds];\n\n\t\t\tif (selectedContactIds.find(id => id === contactId) !== undefined) {\n\t\t\t\tselectedContactIds = selectedContactIds.filter(id => id !== contactId);\n\t\t\t} else {\n\t\t\t\tselectedContactIds = [...selectedContactIds, contactId];\n\t\t\t}\n\n\t\t\treturn {\n\t\t\t\t...state,\n\t\t\t\tselectedContactIds\n\t\t\t};\n\t\t}\n\t\tcase Actions.SELECT_ALL_CONTACTS: {\n\t\t\tconst arr = Object.keys(state.entities).map(k => state.entities[k]);\n\n\t\t\tconst selectedContactIds = arr.map(contact => contact.id);\n\n\t\t\treturn {\n\t\t\t\t...state,\n\t\t\t\tselectedContactIds\n\t\t\t};\n\t\t}\n\t\tcase Actions.DESELECT_ALL_CONTACTS: {\n\t\t\treturn {\n\t\t\t\t...state,\n\t\t\t\tselectedContactIds: []\n\t\t\t};\n\t\t}\n\t\tcase Actions.OPEN_NEW_CONTACT_DIALOG: {\n\t\t\treturn {\n\t\t\t\t...state,\n\t\t\t\tcontactDialog: {\n\t\t\t\t\ttype: 'new',\n\t\t\t\t\tprops: {\n\t\t\t\t\t\topen: true\n\t\t\t\t\t},\n\t\t\t\t\tdata: null\n\t\t\t\t}\n\t\t\t};\n\t\t}\n\t\tcase Actions.CLOSE_NEW_CONTACT_DIALOG: {\n\t\t\treturn {\n\t\t\t\t...state,\n\t\t\t\tcontactDialog: {\n\t\t\t\t\ttype: 'new',\n\t\t\t\t\tprops: {\n\t\t\t\t\t\topen: false\n\t\t\t\t\t},\n\t\t\t\t\tdata: null\n\t\t\t\t}\n\t\t\t};\n\t\t}\n\t\tcase Actions.OPEN_EDIT_CONTACT_DIALOG: {\n\t\t\treturn {\n\t\t\t\t...state,\n\t\t\t\tcontactDialog: {\n\t\t\t\t\ttype: 'edit',\n\t\t\t\t\tprops: {\n\t\t\t\t\t\topen: true\n\t\t\t\t\t},\n\t\t\t\t\tdata: action.data\n\t\t\t\t}\n\t\t\t};\n\t\t}\n\t\tcase Actions.CLOSE_EDIT_CONTACT_DIALOG: {\n\t\t\treturn {\n\t\t\t\t...state,\n\t\t\t\tcontactDialog: {\n\t\t\t\t\ttype: 'edit',\n\t\t\t\t\tprops: {\n\t\t\t\t\t\topen: false\n\t\t\t\t\t},\n\t\t\t\t\tdata: null\n\t\t\t\t}\n\t\t\t};\n\t\t}\n\t\tdefault: {\n\t\t\treturn state;\n\t\t}\n\t}\n};\n\nexport default contactsReducer;\n"]},"metadata":{},"sourceType":"module"}